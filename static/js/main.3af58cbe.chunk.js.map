{"version":3,"sources":["components/LoginButton.js","img/nomad.png","components/Homepage.js","img/logo.png","components/Navigation.js","components/Prompt.js","components/Journal.js","components/Details.js","components/Dashboard.js","App.js","index.js"],"names":["LoginButton","handleLogin","googleData","a","fetch","process","credentials","method","body","JSON","stringify","token","tokenId","headers","status","console","log","window","location","href","clientId","onSuccess","onFailure","response","buttonText","Homepage","require","class","src","sittingImg","alt","style","Navigation","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","logoImg","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","Prompt","props","promptType","useState","prompt","setPrompt","useEffect","getPrompt","fetchPrompt","res","json","Card","border","textAlign","Body","undefined","pre_text","Text","text","name","onClick","Journal","titleState","setTitleState","EditorState","createEmpty","editorState","setEditorState","show","setShow","createPrompts","map","handleClose","handleSave","event","preventDefault","title","content","getCurrentContent","getPlainText","journal","data","backgroundColor","Form","for","fontWeight","fontSize","type","placeholder","onChange","e","target","value","padding","minHeight","onEditorStateChange","Button","Modal","onHide","animation","Header","closeButton","Title","Footer","disabled","length","Details","journalID","useParams","sentiment","score","magnitude","entities","sentences","positive","negative","setJournal","fetchJournal","result","replace","getJournalInfo","listPositives","sentence","handleClick","color","listNegative","backgroundPosition","Container","unixTimeStamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","convertUTC","time_created","split","Array","from","Math","ceil","_","i","includes","trim","findText","splitByPeriod","Dashboard","journals","setJournals","listJournals","to","_id","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3af58cbe.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\n\nfunction LoginButton() {\n\n    const handleLogin = async (googleData) => {\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/auth/login`, {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        if (res.status != 200) {\n            console.log(\"Sending failed. Please try again.\");\n        } else {\n            // Redirect\n            window.location.href = \"#/dashboard\";\n        }\n    }\n\n    const errorResponseGoogle = (response) => {\n        console.log(\"Error: unable to login with Google Authentication.\");\n        console.log(response);\n    }\n\n    return (\n        <div>\n        <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}  // your Google app client ID\n            onSuccess={handleLogin}\n            onFailure={errorResponseGoogle}\n            buttonText=\"Sign in with Google\"\n        />\n        </div>\n    );\n}\n\nexport default LoginButton;","export default __webpack_public_path__ + \"static/media/nomad.ddb9a5b3.png\";","import React from 'react';\nimport LoginButton from './LoginButton';\nimport sittingImg from '../img/nomad.png';\n\n\nfunction Homepage() {\n    require(\"../css/Homepage.css\");\n    return (\n        <div class=\"landing-page\">\n            <div class=\"landing-page-flex\">\n                <div class=\"landing-description\">\n                    <h1 class=\"landing-page__header\">Journable</h1>\n                    <h4 class=\"landing-page__description\">Think, Write, Live</h4>\n                    <LoginButton />\n                </div>\n\n                <img src={sittingImg} alt=\"this is gaming!\" style={{\"height\":\"auto\"}}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Homepage;","export default __webpack_public_path__ + \"static/media/logo.4b3c2850.png\";","import Navbar from \"react-bootstrap/Navbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport logoImg from \"../img/logo.png\";\n\nfunction Navigation() {\n  require(\"../css/Navbar.css\");\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n      {/* <Navbar.Brand href=\"#\">Journable</Navbar.Brand> */}\n\n      <Navbar.Brand href=\"#/dashboard\">\n        <img\n          alt=\"\"\n          src={logoImg}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        Journable\n      </Navbar.Brand>\n\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav>\n          <Nav.Link href=\"#/dashboard\">Dashboard</Nav.Link>\n        </Nav>\n        <Nav className=\"me-auto\">\n          <Nav.Link href=\"#/journal\">Create a new Journal</Nav.Link>\n        </Nav>\n        <Nav>\n          <Nav.Link href=\"/\">Sign out</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React, { useState, useEffect } from \"react\";\n\nimport Card from 'react-bootstrap/Card'\n\nconst Prompt = (props) => {\n    const promptType = props.promptType;\n    const [prompt, setPrompt] = useState(\"\");\n\n    useEffect(() => {\n        getPrompt();\n    }, []);\n\n    const getPrompt = async () => {\n        const res = await fetchPrompt();\n        console.log(res);\n        setPrompt(res);\n    };\n\n    const fetchPrompt = async () => {\n        const res = await fetch(\n            `${process.env.REACT_APP_API_URL}/prompt?prompt=${promptType}`, {\n            method: \"GET\",\n            credentials: \"include\",\n        }\n        );\n\n        return await res.json();\n    };\n\n    function getPreText() {\n        if (prompt.pre_text !== undefined) {\n            return <Card.Text>{prompt.pre_text}</Card.Text>;\n        }\n        return null;\n    }\n\n    return (\n        <Card border=\"primary\" style={{ width: '18rem', textAlign: 'center' }}>\n            <Card.Body>\n                {getPreText()}\n                <Card.Text>{prompt.text}</Card.Text>\n                <Card.Text>{prompt.name}</Card.Text>\n            </Card.Body>\n            <button className=\"btn btn-primary\" onClick={getPrompt} >Refresh </button>\n        </Card>\n    );\n\n}\n\nexport default Prompt;\n","import React, { useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Navigation from \"./Navigation\";\nimport Prompt from \"./Prompt\";\n\nconst Journal = () => {\n  require(\"../css/Journal.css\");\n\n  const [titleState, setTitleState] = useState(\"\");\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [show, setShow] = useState(false);\n\n  const promptTypeList = [\"generic\", \"entity\", \"sentence\"];\n\n  const createPrompts = promptTypeList.map((promptType) => {\n    return <Prompt promptType={promptType} />;\n  });\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n\n    var title = titleState;\n    var content = editorState.getCurrentContent().getPlainText(\"\\u0001\");\n    var journal = {\n      title: title,\n      text: content,\n    };\n    console.log(journal);\n\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/journal`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n      body: JSON.stringify(journal),\n    });\n    const data = await res.text();\n\n    console.log(data);\n\n    window.location.href = \"#/details/\" + data;\n  };\n\n  function validateText() {\n    console.log(editorState.getCurrentContent.length);\n    console.log(titleState.length);\n    if (editorState.getCurrentContent.length > 0 && titleState.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <div>\n      <Navigation />\n      <div\n        className=\"editor\"\n        style={{ width: 800, height: \"100%\", backgroundColor: \"white\" }}\n      >\n        <Form style={{\"width\":\"90%\", \"marginLeft\":\"5%\"}}>\n          <div class=\"form-group\">\n            <label for=\"title\" style={{ fontWeight: \"bold\", fontSize: \"25px\" }}>\n              Title\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"title\"\n              placeholder=\"Title goes here\"\n              // value={titleState}\n              onChange={(e) => setTitleState(e.target.value)}\n              style={{ border: \"1px solid black\" }}\n            ></input>\n          </div>\n          <div\n            style={{\n              border: \"1px solid black\",\n              padding: \"2px\",\n              minHeight: \"580px\",\n            }}\n          >\n            <Editor\n              value={editorState.getCurrentContent}\n              onEditorStateChange={setEditorState}\n            />\n          </div>\n\n          <Button variant=\"primary\" onClick={handleShow}>\n            Save Journal\n          </Button>\n          <Modal show={show} onHide={handleClose} animation={false}>\n            <Modal.Header closeButton>\n              <Modal.Title>Save Journal</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Do you want to save your journal?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={handleSave}\n                disabled={!validateText}\n              >\n                Save\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Form>\n      </div>\n      <div class=\"entity-group\">{createPrompts}</div>\n    </div>\n  );\n};\n\nexport default Journal;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Navigation from \"./Navigation\";\nimport { useParams } from \"react-router-dom\";\n\nconst Details = () => {\n  const { journalID } = useParams();\n  const [journal, setJournal] = useState({\n    text: \"\",\n    sentiment: {\n      score: 0,\n      magnitude: 0,\n    },\n    entities: [],\n    sentences: {\n      positive: [],\n      negative: [],\n    },\n  });\n\n  require(\"../css/Details.css\");\n\n  useEffect(() => {\n    const getJournalInfo = async () => {\n      const res = await fetchJournal();\n      if (res != null) {\n        let text = res.text;\n        let result = text.replace(/\\u0001/g, \"\\n\");\n        res.text = result;\n        console.log(res.text);\n        setJournal(res);\n      }\n    };\n    getJournalInfo();\n  }, []);\n\n  const fetchJournal = async () => {\n    console.log(journalID);\n    const res = await fetch(\n      `${process.env.REACT_APP_API_URL}/journal?id=${journalID}`,\n      {\n        method: \"GET\",\n        credentials: \"include\",\n      }\n    );\n    if (res.status == 200) {\n      const data = await res.json();\n      console.log(data);\n      return data;\n    } else {\n      return null;\n    }\n  };\n\n  //split the text into sentences, each stored into a span\n  function splitByPeriod(text) {\n    let sentences = text.split(/([.?!])/);\n    sentences = Array.from(\n      { length: Math.ceil(sentences.length / 2) },\n      (_, i) =>\n        sentences[2 * i] +\n        (2 * i + 1 < sentences.length ? sentences[2 * i + 1] : \"\")\n    );\n    return sentences.map((sentence) => {\n      return findText(sentence);\n      //return <span>{sentence}</span>;\n    });\n  }\n\n  function findText(text) {\n    //check if the text is in the positive or negative array\n    let positive = journal.sentences.positive\n      .map((sentence) => {\n        return sentence.text;\n      })\n      .includes(text.trim());\n    let negative = journal.sentences.negative\n      .map((sentence) => {\n        return sentence.text;\n      })\n      .includes(text.trim());\n\n    if (positive) {\n      return <span style={{ color: \"green\" }}>{text}</span>;\n    } else if (negative) {\n      return <span style={{ color: \"red\" }}>{text}</span>;\n    } else {\n      return <span>{text}</span>;\n    }\n  }\n\n  function convertUTC(unixTimeStamp) {\n    var a = new Date(unixTimeStamp * 1000);\n    //return a.format(\"%A %b %d %I:%M:%S %p\");\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time =\n      date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  }\n\n  const listPositives = journal.sentences.positive.map((sentence) => {\n    return (\n      <div onClick={() => handleClick(sentence.text)}>\n        <Card\n          className=\"sentence-cards\"\n          style={{ backgroundColor: \"green\", color: \"white\" }}\n        >\n          <Card.Body>\n            <Card.Text>\n              <p>{sentence.text}</p>\n            </Card.Text>\n          </Card.Body>\n          {/* <Card.Footer></Card.Footer> */}\n        </Card>\n      </div>\n    );\n  });\n\n  const handleClick = (sentence) => {\n    console.log(sentence);\n  };\n\n  const listNegative = journal.sentences.negative.map((sentence) => {\n    return (\n      <div onClick={() => handleClick(sentence.text)}>\n        <Card\n          className=\"sentence-cards\"\n          style={{ backgroundColor: \"red\", color: \"white\" }}\n        >\n          <Card.Body>\n            <Card.Text>\n              <p>{sentence.text}</p>\n            </Card.Text>\n          </Card.Body>\n          {/* <Card.Footer></Card.Footer> */}\n        </Card>\n      </div>\n    );\n  });\n\n  return (\n    <div\n      style={{\n        backgroundPosition: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Navigation />\n      <div className=\"d-flex justify-content-center main-div\">\n        <Container className=\"bodyContainer\">\n          <h1>{journal.title}</h1>\n          <h5>{convertUTC(journal.time_created)}</h5>\n          <p>{splitByPeriod(journal.text)}</p>\n        </Container>\n\n        <Container className=\"sentences\">\n          <h1>Sentiment</h1>\n          <p style={{ textAlign: \"center\" }}>\n            <span className=\"red\">Red</span> denotes negative sentiment and{\" \"}\n            <span className=\"green\">Green </span> denotes positive Sentiment\n          </p>\n          {listPositives}\n          {listNegative}\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Navigation from \"./Navigation\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  require(\"../css/Dashboard.css\");\n\n  const [journals, setJournals] = useState({\n    journals: [],\n  });\n\n  useEffect(() => {\n    const getJournalInfo = async () => {\n      const res = await fetchJournal();\n      setJournals(res);\n    };\n    getJournalInfo();\n  }, []);\n\n  const fetchJournal = async () => {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/journals`, {\n      method: \"GET\",\n      credentials: \"include\",\n    });\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const listJournals = journals[\"journals\"].map((journal) => {\n    return (\n      <Card className=\"card-element\" style={{ width: \"18rem\" }}>\n        <Card.Body>\n          <Card.Title>{journal.title}</Card.Title>\n          <Card.Text>{journal.content}</Card.Text>\n          <Link to={`/details/${journal._id}`}>\n            <button className=\"btn btn-success\">View Journal</button>\n          </Link>\n          <Card.Footer>\n            <small className=\"text-muted\">\n              {convertUTC(journal.time_created)}\n            </small>\n          </Card.Footer>\n        </Card.Body>\n      </Card>\n    );\n  });\n\n  function convertUTC(unixTimeStamp) {\n    var a = new Date(unixTimeStamp * 1000);\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time =\n      date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  }\n\n  return (\n    <div className=\"main-dashboard\">\n      <Navigation />\n      <h1 className=\"title\">Welcome to your Journal</h1>\n      <Container className=\"container-box\">\n        <Card className=\"card-element\" style={{ width: \"18rem\" }}>\n          <Card.Body>\n            <Card.Title>{\"Create a new Entry\"}</Card.Title>\n            {/* <Card.Text>{journal.content}</Card.Text> */}\n            <Link to={`/journal`}>\n              <button className=\"btn btn-primary\">Start New Journal</button>\n            </Link>\n          </Card.Body>\n        </Card>\n        {listJournals}\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Homepage from './components/Homepage';\nimport Journal from './components/Journal';\nimport Details from './components/Details';\nimport Dashboard from \"./components/Dashboard\";\n\nconst App = () => {\n    return (\n        <Router>\n        <Routes>\n            <Route path=\"/\" element={<Homepage/>} />\n            <Route path=\"/journal\" element={<Journal />} />\n            <Route path=\"/details/:journalID\" element={<Details />} />\n            <Route path=\"/dashboard\" element={<Dashboard />} />\n            {/* <Route\n                path=\"/journal\"\n                element={\n                    <RequireAuth>\n                        <Journal />\n                    </RequireAuth>\n                }\n            />g\n            <Route\n                path=\"/details\"\n                element={\n                    <RequireAuth>\n                        <Details />\n                    </RequireAuth>\n            } /> */}\n        </Routes>\n        </Router>\n    );\n    }\n\n    export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n        <App />\n    </div>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n\n);\n\n"],"sourceRoot":""}