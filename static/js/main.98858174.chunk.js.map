{"version":3,"sources":["img/wood.png","components/LoginButton.js","img/nomad.png","components/Homepage.js","img/logo.png","components/Navigation.js","components/Journal.js","components/Details.js","components/Dashboard.js","App.js","index.js"],"names":["LoginButton","handleLogin","googleData","a","fetch","process","credentials","method","body","JSON","stringify","token","tokenId","headers","status","console","log","window","location","href","clientId","onSuccess","onFailure","response","buttonText","Homepage","require","class","src","sittingImg","alt","style","Navigation","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","logoImg","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","Journal","useState","titleState","setTitleState","EditorState","createEmpty","editorState","setEditorState","setJournalID","show","setShow","promptList","promptTypeList","handleClose","fetchPrompt","promptType","Math","floor","random","res","json","data","showPrompts","map","prompt","currPrompt","Card","border","Header","Body","Title","name","Text","pre_text","handleSave","event","preventDefault","title","content","getCurrentContent","getPlainText","journal","text","backgroundColor","Form","for","type","placeholder","onChange","e","target","value","padding","minHeight","onEditorStateChange","Button","onClick","Modal","onHide","animation","closeButton","Footer","disabled","length","Details","journalID","useParams","sentiment","score","magnitude","entities","sentences","positive","negative","setJournal","useEffect","fetchJournal","result","replace","getJournalInfo","listPositives","sentence","handleClick","hoverable","color","listNegative","backgroundPosition","whiteSpace","Container","marginBottom","unixTimeStamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","convertUTC","time_created","split","Array","from","ceil","_","i","includes","trim","findText","splitByPeriod","Dashboard","journals","setJournals","listJournals","to","_id","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98858174.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wood.df48913c.png\";","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\n\nfunction LoginButton() {\n\n    const handleLogin = async (googleData) => {\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/auth/login`, {\n            credentials: 'include',\n            method: \"POST\",\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        if (res.status != 200) {\n            console.log(\"Sending failed. Please try again.\");\n        } else {\n            // Redirect\n            window.location.href = \"#/dashboard\";\n        }\n    }\n\n    const errorResponseGoogle = (response) => {\n        console.log(\"Error: unable to login with Google Authentication.\");\n        console.log(response);\n    }\n\n    return (\n        <div>\n        <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}  // your Google app client ID\n            onSuccess={handleLogin}\n            onFailure={errorResponseGoogle}\n            buttonText=\"Sign in with Google\"\n        />\n        </div>\n    );\n}\n\nexport default LoginButton;","export default __webpack_public_path__ + \"static/media/nomad.ddb9a5b3.png\";","import React, { useNavigate } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport LoginButton from './LoginButton';\nimport sittingImg from '../img/nomad.png';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image'\n// import '../css/Homepage.css';\n\nfunction Homepage() {\n    require(\"../css/Homepage.css\");\n    return (\n        <div class=\"landing-page\">\n            <div class=\"landing-page-flex\">\n                <div class=\"landing-description\">\n                    <h1 class=\"landing-page__header\">Journable</h1>\n                    <h4 class=\"landing-page__description\">Think, Write, Live</h4>\n                    <LoginButton />\n                </div>\n\n                <img src={sittingImg} alt=\"this is gaming!\" style={{\"height\":\"auto\"}}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Homepage;","export default __webpack_public_path__ + \"static/media/logo.4b3c2850.png\";","import Navbar from \"react-bootstrap/Navbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport logoImg from \"../img/logo.png\";\n\nfunction Navigation() {\n  require(\"../css/Navbar.css\");\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n      {/* <Navbar.Brand href=\"#\">Journable</Navbar.Brand> */}\n\n      <Navbar.Brand href=\"#/dashboard\">\n        <img\n          alt=\"\"\n          src={logoImg}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        Journable\n      </Navbar.Brand>\n\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav>\n          <Nav.Link href=\"#/dashboard\">Dashboard</Nav.Link>\n        </Nav>\n        <Nav className=\"me-auto\">\n          <Nav.Link href=\"#/journal\">Create a new Journal</Nav.Link>\n        </Nav>\n        <Nav>\n          <Nav.Link href=\"/\">Sign out</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Card from 'react-bootstrap/Card'\n\nimport Navigation from './Navigation';\nimport img from '../img/wood.png';\n\nconst Journal = () => {\n  const [titleState, setTitleState] = useState(\"\");\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [journalID, setJournalID] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [promptList, setPromptList] = useState([\n    {},\n    {},\n    {}\n  ])\n\n  const promptTypeList = [\n    \"generic\",\n    \"entity\",\n    \"sentence\"\n  ]\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const fetchPrompt = async () => {\n    const promptType = promptTypeList[Math.floor(Math.random() * 3)]\n    const res = await fetch(\n      `${process.env.REACT_APP_API_URL}/prompt?prompt=${promptType}`,\n      {\n        method: \"GET\",\n        credentials: \"include\",\n      }\n    );\n    if (res.status === 200) {\n      var data = await res.json();\n      data = data['promptType'] = promptType\n      return data;\n    } else {\n        return null;\n    }\n  };\n\n  const showPrompts = promptList.map(prompt => {\n    const currPrompt = fetchPrompt()\n    if (currPrompt.promptType !== \"generic\")\n      return (\n        <Card border=\"primary\" style={{ width: '18rem' }}>\n          <Card.Header>{currPrompt.promptType}</Card.Header>\n          <Card.Body>\n            <Card.Title>{currPrompt.name}</Card.Title>\n            <Card.Text>{currPrompt.pre_text}</Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    else\n      return (\n        <Card border=\"primary\" style={{ width: '18rem' }}>\n        <Card.Header>{currPrompt.promptType}</Card.Header>\n        <Card.Body>\n          <Card.Text>{currPrompt.pre_text}</Card.Text>\n        </Card.Body>\n        </Card>\n      )\n  })\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n\n    var title = titleState;\n    var content = editorState.getCurrentContent().getPlainText(\"\\u0001\");\n    var journal = {\n      title: title,\n      text: content,\n    };\n    console.log(journal);\n\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/journal`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n      body: JSON.stringify(journal),\n    });\n    const data = await res.text();\n\n    console.log(data);\n    \n    //return once saved\n    setJournalID(data);\n\n    window.location.href = '#/details/' + data;\n  }\n\n  function validateText() {\n    console.log(editorState.getCurrentContent.length);\n    console.log(titleState.length);\n    if (editorState.getCurrentContent.length > 0 && titleState.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  require(\"../css/Journal.css\");\n  return (\n    <div>\n    <Navigation />\n    <div\n      class=\"container\"\n      style={{ width: 800, height: 800, backgroundColor: \"white\" }}\n    >\n      <Form>\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            placeholder=\"Title goes here\"\n            // value={titleState}\n            onChange={(e) => setTitleState(e.target.value)}\n            style={{ border: \"1px solid black\" }}\n          ></input>\n        </div>\n        <div\n          style={{\n            border: \"1px solid black\",\n            padding: \"2px\",\n            minHeight: \"580px\",\n          }}\n        >\n          <Editor\n            value={editorState.getCurrentContent}\n            onEditorStateChange={setEditorState}\n          />\n        </div>\n\n          <Button variant=\"primary\" onClick={handleShow}>\n            Save Journal\n          </Button>\n        <Modal show={show} onHide={handleClose} animation={false}>\n          <Modal.Header closeButton>\n            <Modal.Title>Save Journal</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Do you want to save your journal?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={handleSave}\n              disabled={!validateText}\n            >\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Form>\n    </div>\n      <div class=\"entity-group\">\n        {showPrompts}\n      </div>\n    </div>\n  );\n};\n\nexport default Journal;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Navigation from \"./Navigation\";\nimport img from \"../img/wood.png\";\nimport { useParams } from \"react-router-dom\";\n\nconst Details = () => {\n  const { journalID } = useParams();\n  const [journal, setJournal] = useState({\n    text: \"\",\n    sentiment: {\n      score: 0,\n      magnitude: 0,\n    },\n    entities: [],\n    sentences: {\n      positive: [],\n      negative: [],\n    },\n  });\n\n  require(\"../css/Details.css\");\n\n  useEffect(() => {\n    const getJournalInfo = async () => {\n      const res = await fetchJournal();\n      if (res != null) {\n        let text = res.text;\n        let result = text.replace(/\\u0001/g, \"\\n\");\n        res.text = result;\n        console.log(res.text);\n        setJournal(res);\n      }\n    };\n    getJournalInfo();\n  }, []);\n\n  const fetchJournal = async () => {\n    console.log(journalID);\n    const res = await fetch(\n      `${process.env.REACT_APP_API_URL}/journal?id=${journalID}`,\n      {\n        method: \"GET\",\n        credentials: \"include\",\n      }\n    );\n    if (res.status == 200) {\n      const data = await res.json();\n      console.log(data);\n      return data;\n    } else {\n      return null;\n    }\n  };\n\n  function getHighlightedText(highlight) {\n    // Split on highlight term and include term into parts, gnore case\n    const text = journal.text;\n    const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\n    return (\n      <span>\n        {\" \"}\n        {parts.map((part, i) => (\n          <span\n            key={i}\n            style={\n              part.toLowerCase() === highlight.toLowerCase()\n                ? { fontWeight: \"bold\", color: \"red\", backgroundColor: \"blue\" }\n                : {}\n            }\n          >\n            {part}\n          </span>\n        ))}{\" \"}\n      </span>\n    );\n  }\n\n  //split the text into sentences, each stored into a span\n  function splitByPeriod(text) {\n    let sentences = text.split(/([.?!])/);\n    sentences = Array.from(\n      { length: Math.ceil(sentences.length / 2) },\n      (_, i) =>\n        sentences[2 * i] +\n        (2 * i + 1 < sentences.length ? sentences[2 * i + 1] : \"\")\n    );\n    return sentences.map((sentence) => {\n      return findText(sentence);\n      //return <span>{sentence}</span>;\n    });\n  }\n\n  function findText(text) {\n    //check if the text is in the positive or negative array\n    let positive = journal.sentences.positive\n      .map((sentence) => {\n        return sentence.text;\n      })\n      .includes(text.trim());\n    let negative = journal.sentences.negative\n      .map((sentence) => {\n        return sentence.text;\n      })\n      .includes(text.trim());\n\n    if (positive) {\n      return <span style={{ color: \"green\" }}>{text}</span>;\n    } else if (negative) {\n      return <span style={{ color: \"red\" }}>{text}</span>;\n    } else {\n      return <span>{text}</span>;\n    }\n  }\n\n  function convertUTC(unixTimeStamp) {\n    var a = new Date(unixTimeStamp * 1000);\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time =\n      date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n  }\n\n  const listPositives = journal.sentences.positive.map((sentence) => {\n    return (\n      <div onClick={() => handleClick(sentence.text)}>\n        <Card hoverable style={{ backgroundColor: \"green\", color: \"white\" }}>\n          <Card.Body>\n            <Card.Text>\n              <p>{sentence.text}</p>\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </div>\n    );\n  });\n\n  const handleClick = (sentence) => {\n    console.log(sentence);\n  };\n\n  const listNegative = journal.sentences.negative.map((sentence) => {\n    return (\n      <div onClick={() => handleClick(sentence.text)}>\n        <Card hoverable style={{ backgroundColor: \"red\", color: \"white\" }}>\n          <Card.Body>\n            <Card.Text>\n              <p>{sentence.text}</p>\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </div>\n    );\n  });\n\n  return (\n    <div\n      style={{\n        backgroundPosition: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Navigation />\n      <div\n        class=\"d-flex justify-content-center main-div\"\n        style={{ whiteSpace: \"pre-wrap\" }}\n      >\n        <Container className=\"bodyContainer\">\n          <h1 style={{ marginBottom: \"5%\" }}>{journal.title}</h1>\n          <h5 style={{ marginBottom: \"5%\" }}>{convertUTC(journal.time_created)}</h5>\n          <p>{splitByPeriod(journal.text)}</p>\n        </Container>\n\n        <Container className=\"sentences\">\n          {listPositives}\n          {listNegative}\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Navigation from \"./Navigation\";\nimport img from \"../img/wood.png\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  require(\"../css/Dashboard.css\");\n\n  const [journals, setJournals] = useState({\n    journals: [],\n  });\n\n  useEffect(() => {\n    const getJournalInfo = async () => {\n      const res = await fetchJournal();\n      setJournals(res);\n    };\n    getJournalInfo();\n  }, []);\n\n  const fetchJournal = async () => {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/journals`, {\n      method: \"GET\",\n      credentials: \"include\",\n    });\n    const data = await res.json();\n    return data;\n  };\n\n  const listJournals = journals[\"journals\"].map((journal) => {\n    return (\n      <Card className=\"card-element\" style={{ width: \"18rem\" }}>\n        <Card.Body>\n          <Card.Title>{journal.title}</Card.Title>\n          <Card.Text>{journal.content}</Card.Text>\n          <Link to={`/details/${journal._id}`}>\n            <button className=\"btn btn-primary\">View Journal</button>\n          </Link>\n        </Card.Body>\n      </Card>\n    );\n  });\n\n  return (\n    <div\n      className=\"main-dashboard\"\n    >\n      <Navigation />\n      <h1 className=\"title\">Welcome to your Journal</h1>\n      <Container className=\"container-box\">{listJournals}</Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Homepage from './components/Homepage';\nimport Journal from './components/Journal';\nimport Details from './components/Details';\nimport Dashboard from \"./components/Dashboard\";\n\nconst App = () => {\n    return (\n        <Router>\n        <Routes>\n            <Route path=\"/\" element={<Homepage/>} />\n            <Route path=\"/journal\" element={<Journal />} />\n            <Route path=\"/details/:journalID\" element={<Details />} />\n            <Route path=\"/dashboard\" element={<Dashboard />} />\n            {/* <Route\n                path=\"/journal\"\n                element={\n                    <RequireAuth>\n                        <Journal />\n                    </RequireAuth>\n                }\n            />g\n            <Route\n                path=\"/details\"\n                element={\n                    <RequireAuth>\n                        <Details />\n                    </RequireAuth>\n            } /> */}\n        </Routes>\n        </Router>\n    );\n    }\n\n    export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport img from './img/wood.png';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n        <App />\n    </div>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n\n);\n\n"],"sourceRoot":""}